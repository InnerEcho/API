# docker-compose.yml

services:
  # Node.js API 서비스
  api:
    build: .
    container_name: leafy-api-container
    ports:
      - ${PORT}:${PORT}
    env_file:
      - ./.env
    volumes:
      - ./uploads:/usr/src/app/uploads
      - ./hls:/usr/src/app/hls
    restart: unless-stopped
    # 'db' 서비스가 'healthy' 상태가 될 때까지 시작을 기다립니다.
    depends_on:
      db:
        condition: service_healthy

  # MySQL 데이터베이스 서비스
  db:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    # .env 파일의 변수를 참조하여 DB 컨테이너를 초기화합니다.
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PW}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PW}
    volumes:
      - db_data:/var/lib/mysql
    # DB 서버가 연결을 받을 준비가 되었는지 확인하는 healthcheck 설정입니다.
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:latest
    container_name: api-nginx-compose
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - api

# DB 데이터를 영속적으로 저장하기 위한 Docker 볼륨을 정의합니다.
volumes:
  db_data: